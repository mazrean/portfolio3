---
interface Props {
  name: string
  ref?: string
  description: string
  tags: string[]
  imageSrc: string
}

const { name, ref, description, tags, imageSrc, ...rest } = Astro.props
---

<div class="container" {...rest}>
  <div class="image">
    <img src={imageSrc} alt={`${name} image`} loading="lazy" decoding="async" />
  </div>
  <div class="description">
    <p>{tags.map(tag => `#${tag}`).join(' ')}</p>
    {
      ref ? (
        <a href={ref}>
          <h4>{name}</h4>
        </a>
      ) : (
        <h4>{name}</h4>
      )
    }
    <p>{description}</p>
  </div>
</div>

<style>
  .container {
    display: flex;
    width: 100%;
    min-width: 300px;
    max-width: 350px;
    flex-direction: column;
    justify-content: start;
    align-items: flex-start;
    background-color: #ffffff;
    border-radius: 10px;
    border: 1px solid var(--text);
    padding: 10px;
    font-size: 24px;
  }
  a {
    text-decoration: none;
    transition: opacity 0.2s ease-in-out;
  }
  a:hover {
    opacity: 0.5;
  }
  .image {
    width: 100%;
    height: 150px;
  }
  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  .description {
    display: flex;
    flex-direction: column;
    justify-content: start;
    align-items: flex-start;
    gap: 5px;
    padding: 5px;
  }
  h4 {
    margin: 0;
    font-size: 1em;
  }
  p {
    margin: 0;
    font-size: 0.6em;
  }
</style>
