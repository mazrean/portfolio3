---
import type { Presentation } from '@contents/types/presentation'

interface Props {
  presentation: Presentation
}

const { presentation, ...rest } = Astro.props
---

<div class="card" {...rest}>
  <div class="image">
    {
      presentation.embed ? (
        <Fragment set:html={presentation.embed} />
      ) : (
        <img
          src={`/presentation/${presentation.image}.webp`}
          alt="presentation image"
          loading="lazy"
          decoding="async"
        />
      )
    }
  </div>
  <div class="description">
    <p>{presentation.tags.map(tag => `#${tag}`).join(' ')}</p>
    <a href={presentation.ref}>
      <h4>{presentation.title}</h4>
    </a>
    {presentation.date ? <p>{presentation.date}</p> : null}
  </div>
</div>

<style>
  .card {
    display: flex;
    width: 100%;
    min-width: 300px;
    max-width: 350px;
    flex-direction: column;
    justify-content: start;
    align-items: flex-start;
    background-color: #ffffff;
    border-radius: 10px;
    border: 1px solid var(--text);
    padding: 10px;
    font-size: 24px;
  }
  a {
    text-decoration: none;
    transition: opacity 0.2s ease-in-out;
  }
  a:hover {
    opacity: 0.5;
  }
  .image {
    width: 100%;
    height: 150px;
  }
  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  .description {
    display: flex;
    flex-direction: column;
    justify-content: start;
    align-items: flex-start;
    gap: 5px;
    padding: 5px;
  }
  h4 {
    margin: 0;
    font-size: 0.8em;
    min-height: 3em;
  }
  p {
    margin: 0;
    font-size: 0.6em;
  }
</style>
